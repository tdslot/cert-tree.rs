name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: linux-x86_64
          - os: macos-latest
            name: macos-x86_64
          - os: windows-latest
            name: windows-x86_64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build release
        run: cargo build --release

      - name: Rename binary (Windows)
        if: matrix.os == 'windows-latest'
        run: mv target/release/cert-tree.exe target/release/cert-tree-${{ matrix.name }}.exe

      - name: Rename binary (Unix)
        if: matrix.os != 'windows-latest'
        run: mv target/release/cert-tree target/release/cert-tree-${{ matrix.name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: cert-tree-${{ matrix.name }}
          path: target/release/cert-tree-${{ matrix.name }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Get version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Extract release notes
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          awk "/^## \\[${VERSION}\\]/{flag=1; next} /^## \\[/{flag=0} flag" CHANGELOG.md > release_notes.md

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          body_path: release_notes.md
          tag_name: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}