name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build for Linux
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build release
        run: cargo build --release --target x86_64-unknown-linux-gnu

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: cert_tree-linux-x86_64
          path: target/x86_64-unknown-linux-gnu/release/cert_tree

  build-macos-intel:
    name: Build for macOS Intel
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build release
        run: cargo build --release

      - name: Create .tar.gz archive
        run: |
          mkdir -p cert_tree-macos-x86_64
          cp target/release/cert_tree cert_tree-macos-x86_64/
          cp README.md LICENSE cert_tree-macos-x86_64/
          tar -czf cert_tree-macos-x86_64.tar.gz cert_tree-macos-x86_64/

      - name: Upload .tar.gz artifact
        uses: actions/upload-artifact@v4
        with:
          name: cert_tree-macos-x86_64.tar.gz
          path: cert_tree-macos-x86_64.tar.gz

  build-macos-arm:
    name: Build for macOS ARM
    runs-on: macos-14

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build release
        run: cargo build --release

      - name: Create .tar.gz archive
        run: |
          mkdir -p cert_tree-macos-aarch64
          cp target/release/cert_tree cert_tree-macos-aarch64/
          cp README.md LICENSE cert_tree-macos-aarch64/
          tar -czf cert_tree-macos-aarch64.tar.gz cert_tree-macos-aarch64/

      - name: Upload .tar.gz artifact
        uses: actions/upload-artifact@v4
        with:
          name: cert_tree-macos-aarch64.tar.gz
          path: cert_tree-macos-aarch64.tar.gz

  build-rpm-centos:
    name: Build RPM for CentOS
    runs-on: ubuntu-latest
    container: quay.io/centos/centos:stream9
    steps:
      - name: Install dependencies
        run: |
          yum update -y
          yum install -y --allowerasing curl gcc make openssl-devel
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          cargo install cargo-rpm
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build release
        run: |
          source $HOME/.cargo/env
          cargo build --release
      - name: Build .rpm package
        run: |
          source $HOME/.cargo/env
          cargo rpm build
      - name: Upload .rpm artifact
        uses: actions/upload-artifact@v4
        with:
          name: cert_tree-centos-x86_64.rpm
          path: target/release/rpmbuild/RPMS/x86_64/*.rpm

  build-rpm-rocky:
    name: Build RPM for Rocky Linux
    runs-on: ubuntu-latest
    container: rockylinux:9
    steps:
      - name: Install dependencies
        run: |
          dnf update -y
          dnf install -y --allowerasing curl gcc make openssl-devel
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          cargo install cargo-rpm
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build release
        run: |
          source $HOME/.cargo/env
          cargo build --release
      - name: Build .rpm package
        run: |
          source $HOME/.cargo/env
          cargo rpm build
      - name: Upload .rpm artifact
        uses: actions/upload-artifact@v4
        with:
          name: cert_tree-rocky-x86_64.rpm
          path: target/release/rpmbuild/RPMS/x86_64/*.rpm

  build-rpm-alma:
    name: Build RPM for Alma Linux
    runs-on: ubuntu-latest
    container: almalinux:9
    steps:
      - name: Install dependencies
        run: |
          dnf update -y
          dnf install -y --allowerasing curl gcc make openssl-devel
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          cargo install cargo-rpm
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build release
        run: |
          source $HOME/.cargo/env
          cargo build --release
      - name: Build .rpm package
        run: |
          source $HOME/.cargo/env
          cargo rpm build
      - name: Upload .rpm artifact
        uses: actions/upload-artifact@v4
        with:
          name: cert_tree-alma-x86_64.rpm
          path: target/release/rpmbuild/RPMS/x86_64/*.rpm

  build-deb-debian:
    name: Build DEB for Debian
    runs-on: ubuntu-latest
    container: debian:latest
    steps:
      - name: Install dependencies
        run: |
          apt update -y
          apt install -y curl build-essential libssl-dev
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          cargo install cargo-deb
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build release
        run: |
          source $HOME/.cargo/env
          cargo build --release
      - name: Build .deb package
        run: |
          source $HOME/.cargo/env
          cargo deb
      - name: Upload .deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: cert_tree-debian-x86_64.deb
          path: target/debian/*.deb

  build-deb-ubuntu:
    name: Build DEB for Ubuntu
    runs-on: ubuntu-latest
    container: ubuntu:latest
    steps:
      - name: Install dependencies
        run: |
          apt update -y
          apt install -y curl build-essential libssl-dev
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          cargo install cargo-deb
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build release
        run: |
          source $HOME/.cargo/env
          cargo build --release
      - name: Build .deb package
        run: |
          source $HOME/.cargo/env
          cargo deb
      - name: Upload .deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: cert_tree-ubuntu-x86_64.deb
          path: target/debian/*.deb

  release:
    needs: [build, build-macos-intel, build-macos-arm, build-rpm-centos, build-rpm-rocky, build-rpm-alma, build-deb-debian, build-deb-ubuntu]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Get version
        id: get_version
        run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Extract release notes
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          awk "/^## \\[${VERSION}\\]/{flag=1; next} /^## \\[/{flag=0} flag" CHANGELOG.md > release_notes.md

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          body_path: release_notes.md
          tag_name: ${{ github.ref }}
          name: cert_tree ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}